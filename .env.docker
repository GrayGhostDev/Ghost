# Ghost Backend Framework - Docker Environment Configuration
# This file is used when running the application in Docker containers

# Basic settings
ENVIRONMENT=docker
DEBUG=false
PROJECT_NAME=Ghost Backend Docker

# API Configuration (Container Internal)
API_HOST=0.0.0.0  # OK inside container, bound to all interfaces
API_PORT=8888     # Container internal port

# Database configuration (Using Docker service names)
DB_HOST=postgres  # Docker service name
DB_PORT=5432
DB_NAME=ghost
DB_USER=postgres
DB_PASSWORD=${DB_PASSWORD:-ghost_password}  # Override via docker-compose or .env
DB_DRIVER=postgresql

# Redis configuration (Using Docker service name)
REDIS_HOST=redis  # Docker service name
REDIS_PORT=6379
REDIS_DB=0

# Database URLs (for ORMs that prefer connection strings)
DATABASE_URL=postgresql://postgres:${DB_PASSWORD:-ghost_password}@postgres:5432/ghost
REDIS_URL=redis://redis:6379/0

# Logging Configuration
LOG_LEVEL=INFO
LOG_FILE=/app/logs/ghost.log
LOG_TO_CONSOLE=true
LOG_COLORIZE=false  # No colors in Docker logs

# File Storage (Docker volumes)
UPLOAD_DIR=/app/uploads/
STATIC_DIR=/app/static/
MAX_FILE_SIZE=10MB

# Security (These should be overridden via docker-compose environment)
SECRET_KEY=${SECRET_KEY}  # Must be set via docker-compose
JWT_SECRET=${JWT_SECRET}  # Must be set via docker-compose
API_KEY=${API_KEY}        # Must be set via docker-compose

# CORS Configuration (Allow local development)
CORS_ORIGINS=["http://localhost:3000","http://localhost:3001","http://localhost:8080"]

# External Services (Set via docker-compose environment)
SENDGRID_API_KEY=${SENDGRID_API_KEY}
ANTHROPIC_ADMIN_API_KEY=${ANTHROPIC_ADMIN_API_KEY}
OPENAI_API_KEY=${OPENAI_API_KEY}
GITHUB_PAT=${GITHUB_PAT}
BRAVE_API_KEY=${BRAVE_API_KEY}
SENTRY_DSN=${SENTRY_DSN}

# Health Check
HEALTH_CHECK_ENABLED=true
METRICS_ENABLED=true

# Docker-specific settings
PYTHONUNBUFFERED=1  # Ensure stdout/stderr are unbuffered for Docker logs
PYTHONDONTWRITEBYTECODE=1  # Don't write .pyc files

# Performance
WORKERS=4  # Number of worker processes
WORKER_CONNECTIONS=1000
WORKER_CLASS=uvicorn.workers.UvicornWorker

# Development tools (disabled in Docker)
AUTO_RELOAD=false
SQL_ECHO=false