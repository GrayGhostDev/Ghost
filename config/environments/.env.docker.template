# Ghost Backend Framework - Docker Environment Template
# Copy this file to .env (excluded from git) and set your secure values
# Use 'scripts/secrets/keychain.sh setup' to store credentials securely

# ============================================================================
# CORE APPLICATION SECRETS - LOAD FROM KEYCHAIN
# ============================================================================
JWT_SECRET=${JWT_SECRET}
API_KEY=${API_KEY}

# ============================================================================
# DATABASE CONFIGURATION
# ============================================================================
DB_PASSWORD=${DB_PASSWORD}
POSTGRES_PASSWORD=${DB_PASSWORD}
DATABASE_URL=postgresql://postgres:${DB_PASSWORD}@postgres:5432/ghost

# ============================================================================
# EXTERNAL API KEYS - LOAD FROM KEYCHAIN
# ============================================================================
ANTHROPIC_ADMIN_API_KEY=${ANTHROPIC_ADMIN_API_KEY}
OPENAI_API_KEY=${OPENAI_API_KEY}
GITHUB_PAT=${GITHUB_PAT}
BRAVE_API_KEY=${BRAVE_API_KEY}
SENDGRID_API_KEY=${SENDGRID_API_KEY}

# ============================================================================
# OAUTH CREDENTIALS - LOAD FROM KEYCHAIN
# ============================================================================
GOOGLE_OAUTH_CLIENT_ID=${GOOGLE_OAUTH_CLIENT_ID}
GOOGLE_OAUTH_CLIENT_SECRET=${GOOGLE_OAUTH_CLIENT_SECRET}
GITHUB_OAUTH_CLIENT_ID=${GITHUB_OAUTH_CLIENT_ID}
GITHUB_OAUTH_CLIENT_SECRET=${GITHUB_OAUTH_CLIENT_SECRET}

# ============================================================================
# CLOUD SERVICES - LOAD FROM KEYCHAIN
# ============================================================================
AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
SENTRY_DSN=${SENTRY_DSN}

# ============================================================================
# NON-SENSITIVE CONFIGURATION
# ============================================================================
ENVIRONMENT=production
DEBUG=false
HOST=0.0.0.0
PORT=8000
LOG_LEVEL=INFO

# Database connection
DB_HOST=postgres
DB_PORT=5432
DB_NAME=ghost
DB_USER=postgres

# Redis connection
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_DB=0

# API Configuration
API_TITLE=Ghost Backend Framework
API_VERSION=1.0.0
API_DESCRIPTION=Secure Production Backend API

# Security settings
JWT_ALGORITHM=HS256
JWT_EXPIRY_HOURS=24
ACCESS_TOKEN_EXPIRE_MINUTES=30
REFRESH_TOKEN_EXPIRE_DAYS=7

# CORS settings
CORS_ORIGINS=https://yourdomain.com,https://www.yourdomain.com
CORS_METHODS=GET,POST,PUT,DELETE,PATCH
CORS_HEADERS=*
CORS_CREDENTIALS=true

# File upload settings
MAX_FILE_SIZE=10485760
UPLOAD_DIR=uploads/
ALLOWED_EXTENSIONS=.jpg,.jpeg,.png,.pdf,.doc,.docx

# Rate limiting
RATE_LIMIT=100/minute
BURST_LIMIT=200/minute

# Logging
LOG_FILE=logs/api.log
LOG_MAX_SIZE=10MB
LOG_BACKUP_COUNT=5
LOG_FORMAT=json
