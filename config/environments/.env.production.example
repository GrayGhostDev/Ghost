# ==================================================================
# GHOST BACKEND FRAMEWORK - PRODUCTION CONFIGURATION TEMPLATE
# ==================================================================
# Copy this to .env and customize for your environment
# SECURITY: Never commit .env to version control!

# ==================================================================
# ENVIRONMENT SETTINGS
# ==================================================================
ENVIRONMENT=development              # Options: development, production, testing
DEBUG=true                          # Set to false in production
PROJECT_NAME=MyApp Backend          # Your project name
VERSION=1.0.0                       # Your project version

# ==================================================================
# DATABASE CONFIGURATION
# ==================================================================
# PostgreSQL (Recommended for production)
DB_HOST=localhost
DB_PORT=5432
DB_NAME=myapp_db                    # Change this to your database name
DB_USER=postgres                    # Change this to your database user
DB_PASSWORD=your_secure_password    # REQUIRED: Set a strong password
DB_DRIVER=postgresql

# Alternative: SQLite (Good for development/testing)
# DB_DRIVER=sqlite
# DB_NAME=myapp.db

# Database connection pooling
DB_POOL_SIZE=10
DB_MAX_OVERFLOW=20
DB_ECHO=false                       # Set to true for SQL query debugging

# ==================================================================
# REDIS CONFIGURATION (Optional - for caching and sessions)
# ==================================================================
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DB=0
REDIS_PASSWORD=                     # Leave empty if no auth required
REDIS_DECODE_RESPONSES=true

# ==================================================================
# API SERVER CONFIGURATION
# ==================================================================
API_HOST=0.0.0.0                    # 0.0.0.0 for all interfaces, 127.0.0.1 for localhost only
API_PORT=8000                       # Change if port 8000 is occupied
API_TITLE=MyApp API                 # Your API title
API_VERSION=1.0.0                   # API version
API_DEBUG=true                      # Set to false in production

# CORS Settings (for frontend integration)
API_CORS_ORIGINS=["http://localhost:3000","http://localhost:8080"]
API_CORS_METHODS=["GET","POST","PUT","DELETE","PATCH"]
API_CORS_HEADERS=["*"]

# Rate Limiting
API_RATE_LIMIT=100/minute           # Adjust based on your needs

# ==================================================================
# AUTHENTICATION & SECURITY
# ==================================================================
# JWT Configuration (REQUIRED for authentication)
JWT_SECRET_KEY=your-super-secret-jwt-key-here-make-it-at-least-64-characters-long-and-completely-random-12345
JWT_ALGORITHM=HS256
JWT_ACCESS_TOKEN_EXPIRE_MINUTES=30
JWT_REFRESH_TOKEN_EXPIRE_DAYS=7

# Password Security
PASSWORD_MIN_LENGTH=8
PASSWORD_REQUIRE_SPECIAL=true
PASSWORD_REQUIRE_NUMBERS=true
PASSWORD_REQUIRE_UPPERCASE=true

# API Keys (if you plan to use API key authentication)
API_KEY=your-api-key-here           # Generate a random API key

# ==================================================================
# EXTERNAL API INTEGRATIONS
# ==================================================================
# OpenAI (for AI features)
OPENAI_API_KEY=sk-your-openai-key-here
OPENAI_MODEL=gpt-4                  # or gpt-3.5-turbo

# Anthropic Claude (alternative AI provider)
ANTHROPIC_API_KEY=your-anthropic-key-here

# GitHub (for repository integrations)
GITHUB_TOKEN=ghp_your-github-token-here

# Email Services (choose one)
# SendGrid
SENDGRID_API_KEY=your-sendgrid-key
SENDGRID_FROM_EMAIL=noreply@yourdomain.com

# AWS SES
AWS_ACCESS_KEY_ID=your-aws-access-key
AWS_SECRET_ACCESS_KEY=your-aws-secret-key
AWS_REGION=us-east-1
AWS_SES_FROM_EMAIL=noreply@yourdomain.com

# ==================================================================
# LOGGING CONFIGURATION
# ==================================================================
LOG_LEVEL=INFO                      # Options: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_FILE=logs/app.log              # Log file path
LOG_MAX_SIZE=10MB                  # Max log file size before rotation
LOG_BACKUP_COUNT=5                 # Number of backup log files to keep
LOG_FORMAT=json                    # Options: json, text

# Console logging
LOG_TO_CONSOLE=true
LOG_COLORIZE=true                  # Colorize console output

# ==================================================================
# MONITORING & OBSERVABILITY
# ==================================================================
# Sentry (Error tracking)
SENTRY_DSN=https://your-sentry-dsn@sentry.io/project

# Health check endpoints
HEALTH_CHECK_ENABLED=true
METRICS_ENABLED=true

# ==================================================================
# FILE STORAGE
# ==================================================================
# Local file storage
UPLOAD_DIR=uploads/
MAX_FILE_SIZE=10MB
ALLOWED_FILE_TYPES=["jpg","jpeg","png","pdf","doc","docx"]

# AWS S3 (optional)
AWS_S3_BUCKET=your-bucket-name
AWS_S3_REGION=us-east-1

# ==================================================================
# TASK QUEUE (Optional - for background jobs)
# ==================================================================
# Celery with Redis/RabbitMQ
CELERY_BROKER_URL=redis://localhost:6379/1
CELERY_RESULT_BACKEND=redis://localhost:6379/1

# ==================================================================
# DEVELOPMENT/TESTING SPECIFIC
# ==================================================================
# Test database (only used when ENVIRONMENT=testing)
TEST_DB_NAME=test_myapp_db

# Development tools
AUTO_RELOAD=true                   # Auto-reload on code changes (dev only)
SQL_ECHO=false                     # Echo SQL queries to console

# ==================================================================
# LEGACY COMPATIBILITY (if migrating from older systems)
# ==================================================================
DATABASE_URL=postgresql://postgres:your_secure_password@localhost:5432/myapp_db
REDIS_URL=redis://localhost:6379/0
SECRET_KEY=your-super-secret-key-here
PYTHONPATH=./src
